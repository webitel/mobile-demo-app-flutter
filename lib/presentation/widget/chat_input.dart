import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:webitel_sdk/domain/entity/dialog_message_entity.dart';import 'package:webitel_sdk/presentation/bloc/chat/chat_bloc.dart';import 'package:webitel_sdk/presentation/widget/attachment_options.dart';class ChatInput extends StatelessWidget {  const ChatInput({    super.key,    required this.chatBloc,  });  final ChatBloc chatBloc;  @override  Widget build(BuildContext context) {    final TextEditingController textEditingController = TextEditingController();    String messageContent = '';    void showAttachmentOptions(BuildContext context) {      showModalBottomSheet(        context: context,        backgroundColor: Colors.transparent,        builder: (context) {          return AttachmentOptions(            onSelectImage: () {              Navigator.of(context).pop();              chatBloc.add(UploadImageEvent());            },            onSelectFile: () {              Navigator.of(context).pop();              chatBloc.add(UploadFileEvent());            },          );        },      );    }    return Row(      mainAxisAlignment: MainAxisAlignment.center,      children: <Widget>[        Expanded(          child: Container(            constraints: const BoxConstraints(maxHeight: 127),            child: Scrollbar(              thumbVisibility: true,              child: SingleChildScrollView(                scrollDirection: Axis.vertical,                reverse: true,                child: TextField(                  textCapitalization: TextCapitalization.sentences,                  maxLines: null,                  keyboardType: TextInputType.multiline,                  controller: textEditingController,                  onChanged: (value) {                    messageContent = value;                  },                  decoration: const InputDecoration(                    hintText: 'Type here',                    border: InputBorder.none,                    enabledBorder: InputBorder.none,                  ),                ),              ),            ),          ),        ),        const SizedBox(width: 16),        GestureDetector(          onTap: () {            textEditingController.clear();            chatBloc.add(              SendDialogMessageEvent(                dialogMessageEntity: DialogMessageEntity(                  id: 0,                  dialogMessageContent: messageContent,                ),              ),            );          },          child: SizedBox(            height: 40,            width: 40,            child: SvgPicture.asset(              'assets/icons/send_message.svg',              colorFilter: const ColorFilter.mode(                Colors.black,                BlendMode.srcIn,              ),            ),          ),        ),        const SizedBox(width: 16),        GestureDetector(          onTap: () => showAttachmentOptions(context),          child: SizedBox(            height: 40,            width: 40,            child: Image.asset(              'assets/images/attach-file.png',              width: 60,              height: 60,            ),          ),        ),        if (chatBloc.state.selectedFile.path.isNotEmpty) ...[          Image.file(            chatBloc.state.selectedFile,            width: 50,            height: 50,          ),          IconButton(            icon: const Icon(Icons.close),            onPressed: () {              chatBloc.add(ClearImageFromStateEvent());            },          ),        ],      ],    );  }}